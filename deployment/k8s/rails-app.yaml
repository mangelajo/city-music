apiVersion: v1
kind: Service
metadata:
  name: rails 
  labels:
    app: rails 
spec:
  ports:
    - port: 3000
  selector:
    app: rails
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: rails
  labels:
    app: rails
spec:
  replicas: 4
  selector:
    matchLabels:
      app: rails
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2        # how many pods we can add at a time
      maxUnavailable: 0  # maxUnavailable define how many pods can be unavailable
                         # during the rolling update
  template:
    metadata:
      labels:
        app: rails
    spec:
      containers:
      - image: ghcr.io/mangelajo/city-music
        name: rails
        envFrom:
        - secretRef:
            name: postgres-config
        env:
         - name: RAILS_APP_HOST
           value: rails.music-madrid.svc.cluster.local
         - name: POSTGRES_HOST
           value: postgres
         - name: SECRET_KEY_BASE 
           valueFrom:
             secretKeyRef:
               name: rails-config
               key: SECRET_KEY_BASE
        ports:
        - containerPort: 3000
          name: rails
        volumeMounts:
        - name: rails-persistent-storage
          mountPath: /app/storage
        readinessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 3
            failureThreshold: 2
            initialDelaySeconds: 15
        livenessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
            initialDelaySeconds: 15
      volumes:
      - name: rails-persistent-storage
        persistentVolumeClaim:
          claimName: rails-storage-pv-claim
